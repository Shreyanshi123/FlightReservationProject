// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using air_reservation.Data_Access_Layer;

#nullable disable

namespace air_reservation.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250604190931_airline007")]
    partial class airline007
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("air_reservation.Models.Flight_Model_.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aircraft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ArrivalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("AvailableBusinessSeats")
                        .HasColumnType("int");

                    b.Property<int>("AvailableEconomySeats")
                        .HasColumnType("int");

                    b.Property<decimal>("BusinessPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("DepartureDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("EconomyPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalBusinessSeats")
                        .HasColumnType("int");

                    b.Property<int>("TotalEconomySeats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aircraft = "Boeing 737",
                            Airline = "American Airlines",
                            ArrivalDateTime = new DateTime(2025, 6, 12, 1, 9, 30, 565, DateTimeKind.Utc).AddTicks(7292),
                            AvailableBusinessSeats = 30,
                            AvailableEconomySeats = 150,
                            BusinessPrice = 899.99m,
                            DepartureDateTime = new DateTime(2025, 6, 11, 19, 9, 30, 565, DateTimeKind.Utc).AddTicks(7281),
                            Destination = "Los Angeles",
                            EconomyPrice = 299.99m,
                            FlightNumber = "AA101",
                            Origin = "New York",
                            Status = 0,
                            TotalBusinessSeats = 30,
                            TotalEconomySeats = 150
                        },
                        new
                        {
                            Id = 2,
                            Aircraft = "Airbus A320",
                            Airline = "Delta Airlines",
                            ArrivalDateTime = new DateTime(2025, 6, 9, 22, 9, 30, 565, DateTimeKind.Utc).AddTicks(7309),
                            AvailableBusinessSeats = 24,
                            AvailableEconomySeats = 120,
                            BusinessPrice = 699.99m,
                            DepartureDateTime = new DateTime(2025, 6, 9, 19, 9, 30, 565, DateTimeKind.Utc).AddTicks(7307),
                            Destination = "Miami",
                            EconomyPrice = 249.99m,
                            FlightNumber = "DL202",
                            Origin = "Chicago",
                            Status = 0,
                            TotalBusinessSeats = 24,
                            TotalEconomySeats = 120
                        },
                        new
                        {
                            Id = 3,
                            Aircraft = "Boeing 757",
                            Airline = "United Airlines",
                            ArrivalDateTime = new DateTime(2025, 6, 8, 21, 9, 30, 565, DateTimeKind.Utc).AddTicks(7470),
                            AvailableBusinessSeats = 28,
                            AvailableEconomySeats = 140,
                            BusinessPrice = 599.99m,
                            DepartureDateTime = new DateTime(2025, 6, 8, 19, 9, 30, 565, DateTimeKind.Utc).AddTicks(7469),
                            Destination = "Seattle",
                            EconomyPrice = 199.99m,
                            FlightNumber = "UA303",
                            Origin = "San Francisco",
                            Status = 0,
                            TotalBusinessSeats = 28,
                            TotalEconomySeats = 140
                        },
                        new
                        {
                            Id = 4,
                            Aircraft = "Airbus A321",
                            Airline = "British Airways",
                            ArrivalDateTime = new DateTime(2025, 6, 10, 20, 9, 30, 565, DateTimeKind.Utc).AddTicks(7479),
                            AvailableBusinessSeats = 40,
                            AvailableEconomySeats = 180,
                            BusinessPrice = 499.99m,
                            DepartureDateTime = new DateTime(2025, 6, 10, 19, 9, 30, 565, DateTimeKind.Utc).AddTicks(7478),
                            Destination = "Paris",
                            EconomyPrice = 149.99m,
                            FlightNumber = "BA404",
                            Origin = "London",
                            Status = 0,
                            TotalBusinessSeats = 40,
                            TotalEconomySeats = 180
                        },
                        new
                        {
                            Id = 5,
                            Aircraft = "Boeing 737",
                            Airline = "Air France",
                            ArrivalDateTime = new DateTime(2025, 6, 12, 21, 9, 30, 565, DateTimeKind.Utc).AddTicks(7505),
                            AvailableBusinessSeats = 35,
                            AvailableEconomySeats = 160,
                            BusinessPrice = 579.99m,
                            DepartureDateTime = new DateTime(2025, 6, 12, 19, 9, 30, 565, DateTimeKind.Utc).AddTicks(7485),
                            Destination = "Berlin",
                            EconomyPrice = 179.99m,
                            FlightNumber = "AF505",
                            Origin = "Paris",
                            Status = 0,
                            TotalBusinessSeats = 35,
                            TotalEconomySeats = 160
                        },
                        new
                        {
                            Id = 6,
                            Aircraft = "Airbus A320",
                            Airline = "Qantas",
                            ArrivalDateTime = new DateTime(2025, 6, 7, 20, 9, 30, 565, DateTimeKind.Utc).AddTicks(7513),
                            AvailableBusinessSeats = 42,
                            AvailableEconomySeats = 190,
                            BusinessPrice = 459.99m,
                            DepartureDateTime = new DateTime(2025, 6, 7, 19, 9, 30, 565, DateTimeKind.Utc).AddTicks(7511),
                            Destination = "Melbourne",
                            EconomyPrice = 139.99m,
                            FlightNumber = "QF606",
                            Origin = "Sydney",
                            Status = 0,
                            TotalBusinessSeats = 42,
                            TotalEconomySeats = 190
                        },
                        new
                        {
                            Id = 7,
                            Aircraft = "Boeing 777",
                            Airline = "Emirates",
                            ArrivalDateTime = new DateTime(2025, 6, 15, 2, 9, 30, 565, DateTimeKind.Utc).AddTicks(7520),
                            AvailableBusinessSeats = 50,
                            AvailableEconomySeats = 200,
                            BusinessPrice = 999.99m,
                            DepartureDateTime = new DateTime(2025, 6, 14, 19, 9, 30, 565, DateTimeKind.Utc).AddTicks(7518),
                            Destination = "Singapore",
                            EconomyPrice = 399.99m,
                            FlightNumber = "EK707",
                            Origin = "Dubai",
                            Status = 0,
                            TotalBusinessSeats = 50,
                            TotalEconomySeats = 200
                        });
                });

            modelBuilder.Entity("air_reservation.Models.Passenger_Model_.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("SeatClass")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("air_reservation.Models.Payment_Model_.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentGatewayResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("air_reservation.Models.Registration_Model_.RegisterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RegistrationLogs");
                });

            modelBuilder.Entity("air_reservation.Models.Reservation_Model_.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingReference")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("air_reservation.Models.Users_Model_.LoginModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("LoginLogs");
                });

            modelBuilder.Entity("air_reservation.Models.Users_Model_.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 19, 9, 30, 565, DateTimeKind.Utc).AddTicks(5993),
                            Email = "aster@gmail.com",
                            FirstName = "Aster",
                            LastName = "Admin",
                            Password = "$2a$11$DHCxrUwbgvdbUbJUAehjl.Niv/sZHQbbXGtxqAJNsEYdSD6ibPnle",
                            PhoneNumber = "+1234567890",
                            Role = 1
                        });
                });

            modelBuilder.Entity("air_reservation.Models.Passenger_Model_.Passenger", b =>
                {
                    b.HasOne("air_reservation.Models.Reservation_Model_.Reservation", "Reservation")
                        .WithMany("Passengers")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("air_reservation.Models.Payment_Model_.Payment", b =>
                {
                    b.HasOne("air_reservation.Models.Reservation_Model_.Reservation", "Reservation")
                        .WithOne("Payment")
                        .HasForeignKey("air_reservation.Models.Payment_Model_.Payment", "ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("air_reservation.Models.Reservation_Model_.Reservation", b =>
                {
                    b.HasOne("air_reservation.Models.Flight_Model_.Flight", "Flight")
                        .WithMany("Reservations")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("air_reservation.Models.Users_Model_.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("User");
                });

            modelBuilder.Entity("air_reservation.Models.Flight_Model_.Flight", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("air_reservation.Models.Reservation_Model_.Reservation", b =>
                {
                    b.Navigation("Passengers");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("air_reservation.Models.Users_Model_.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
